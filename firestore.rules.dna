rules_version = '2';

/**
 * Academic DNA Profile - Firestore Security Rules
 * 
 * Comprehensive security rules for DNA-related collections
 * To be merged into main firestore.rules file
 */

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================================================
    // Helper Functions
    // ========================================================================
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && request.auth.token.role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isParentOf(studentId) {
      let parentDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return parentDoc.data.linkedStudents != null 
        && studentId in parentDoc.data.linkedStudents;
    }
    
    function isInstitutionAdmin() {
      return hasRole('institution');
    }
    
    function userInInstitution(studentId) {
      let studentDoc = get(/databases/$(database)/documents/users/$(studentId));
      return studentDoc.data.institutionId == request.auth.token.institutionId;
    }
    
    function isPubliclyShared() {
      return resource.data.sharing.isPublic == true;
    }
    
    function isSharedWith(userId) {
      return isAuthenticated() 
        && request.auth.uid in resource.data.sharing.sharedWith;
    }
    
    // ========================================================================
    // Learning DNA Profiles
    // ========================================================================
    
    match /learningDNA/{userId} {
      // Owner can always read and write their DNA
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
      
      // Parents can read if permission granted
      allow read: if isAuthenticated()
        && resource.data.sharing.parentCanView == true
        && isParentOf(userId);
      
      // Institution can read if permission granted
      allow read: if isAuthenticated()
        && resource.data.sharing.institutionCanView == true
        && isInstitutionAdmin()
        && userInInstitution(userId);
      
      // Admins can read (for aggregated analytics only)
      allow read: if isAdmin();
      
      // Public sharing via link
      allow read: if isPubliclyShared();
      
      // Explicitly shared users
      allow read: if isSharedWith(userId);
      
      // Validate writes
      allow create: if isOwner(userId)
        && request.resource.data.userId == userId
        && request.resource.data.consent.dataCollection == true;
      
      allow update: if isOwner(userId)
        && request.resource.data.userId == resource.data.userId;
      
      // Only owner can delete
      allow delete: if isOwner(userId);
    }
    
    // ========================================================================
    // Learning Signals (Behavioral Data)
    // ========================================================================
    
    match /learningSignals/{signalId} {
      // Users can read their own signals
      allow read: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
      
      // Parents can read child's signals
      allow read: if isAuthenticated()
        && isParentOf(resource.data.userId);
      
      // Admins can read for analytics
      allow read: if isAdmin();
      
      // Anyone authenticated can create (system tracks automatically)
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.timestamp != null
        && request.resource.data.type != null;
      
      // No updates or deletes (append-only log)
      allow update: if false;
      allow delete: if false;
    }
    
    // ========================================================================
    // DNA Questionnaires
    // ========================================================================
    
    match /dnaQuestionnaires/{questionnaireId} {
      // Anyone can read active questionnaires
      allow read: if isAuthenticated() 
        && resource.data.status == 'active';
      
      // Admins can read all (including drafts)
      allow read: if isAdmin();
      
      // Only admins can create/update
      allow create: if isAdmin()
        && request.resource.data.status in ['draft', 'active', 'archived']
        && request.resource.data.questions != null
        && request.resource.data.title != null;
      
      allow update: if isAdmin();
      
      // Admins can archive (soft delete)
      allow update: if isAdmin() 
        && request.resource.data.status == 'archived';
      
      // No hard deletes
      allow delete: if false;
    }
    
    // ========================================================================
    // DNA Questionnaire Responses
    // ========================================================================
    
    match /dnaResponses/{responseId} {
      // Users can read and write their own responses
      allow read: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
      
      // Parents can read child's responses
      allow read: if isAuthenticated()
        && isParentOf(resource.data.userId);
      
      // Admins can read (anonymized analytics only)
      allow read: if isAdmin();
      
      // Users can create their own responses
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.questionnaireId != null
        && request.resource.data.responses != null;
      
      // Users can update their own responses (only if not complete)
      allow update: if isAuthenticated()
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;
      
      // Users can delete their own responses
      allow delete: if isAuthenticated()
        && resource.data.userId == request.auth.uid;
    }
    
    // ========================================================================
    // DNA Snapshots (Historical Records)
    // ========================================================================
    
    match /dnaSnapshots/{snapshotId} {
      // Users can read their own snapshots
      allow read: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
      
      // Parents can read child's snapshots
      allow read: if isAuthenticated()
        && isParentOf(resource.data.userId);
      
      // Admins can read for analytics
      allow read: if isAdmin();
      
      // Only system/functions can create
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid;
      
      // No updates or deletes (historical record)
      allow update: if false;
      allow delete: if false;
    }
    
    // ========================================================================
    // Shareable DNA Cards
    // ========================================================================
    
    match /shareableDNACards/{shareId} {
      // Owner can read/write
      allow read, write: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
      
      // Anyone with the share ID can read (public sharing)
      allow read: if true; // Public read via share link
      
      // Track view count
      allow update: if request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['viewCount', 'updatedAt']);
      
      // Owner can delete
      allow delete: if isAuthenticated()
        && resource.data.userId == request.auth.uid;
    }
    
    // ========================================================================
    // DNA Metrics (System Analytics)
    // ========================================================================
    
    match /dnaMetrics/{metricId} {
      // Only admins can read
      allow read: if isAdmin();
      
      // Only system can write
      allow write: if false;
    }
    
    // ========================================================================
    // Cohort DNA Insights (Institution Analytics)
    // ========================================================================
    
    match /cohortDNAInsights/{cohortId} {
      // Institution admins can read their own cohort insights
      allow read: if isInstitutionAdmin()
        && request.auth.token.institutionId == resource.data.institutionId;
      
      // Platform admins can read all
      allow read: if isAdmin();
      
      // Only system can write
      allow write: if false;
    }
  }
}

